kind: pipeline
type:
name: official-web

steps:
  - name: build_dev
    image: reg.ffglobaltech.com/golang:1.15
    environment:
      ACCESS_TOKEN:
        from_secret: git_token
    commands:
      - mv ./deployments/config/env-dev.json ./deployments/config/env.json
    when:
      branch:
        - dev

  - name: build_tag
    image: reg.ffglobaltech.com/golang:1.15
    environment:
      ACCESS_TOKEN:
        from_secret: git_token
    commands:
       - mv ./deployments/config/env-qa.json ./deployments/config/env.json
    when:
      event:
        - tag

  - name: docker_dev
    image: reg.ffglobaltech.com/plugins/docker
    privileged: true
    environment:
      ACCESS_TOKEN:
        from_secret: git_token
    settings:
      repo: reg.ffglobaltech.com/megarich/official
      use_cache: true
      tags: latest
      dockerfile: ./dockerfile
      build_args_from_env:
        - ACCESS_TOKEN
      build_args:
        - USER=drone.robot
    depends_on:
      - build_dev
    when:
      branch:
        - dev

  - name: configMap
    image: reg.ffglobaltech.com/drone-plugin-kube:0.2.0
    settings:
      namespace: official-web
      template: ./deployments/helm/cm.yaml
      configmap_file: ./deployments/config/env.json
      ca:
        from_secret: k8s_cert
      server:
        from_secret: k8s_server
      token:
        from_secret: k8s_token
    depends_on:
      - docker_dev
    when:
      branch: dev

  # - name: docker_gcr
  #   image: reg.ffglobaltech.com/plugins/gcr
  #   privileged: true
  #   environment:
  #     ACCESS_TOKEN:
  #       from_secret: git_token
  #   settings:
  #     registry: gcr.io
  #     repo: megarich/official
  #     tags: ${DRONE_TAG}
  #     dockerfile: ./dockerfile
  #     json_key:
  #       from_secret: google_credentials
  #     build_args_from_env:
  #       - ACCESS_TOKEN
  #     build_args:
  #       - USER=drone.robot
  #   when:
  #     event: tag

  - name: docker_gar  
    image: reg.ffglobaltech.com/plugins/gar
    privileged: true
    environment:
      ACCESS_TOKEN:
        from_secret: git_token
    settings:
      repo: megarich/tw/taiwan/official
      registry: asia-east1-docker.pkg.dev
      tags: ${DRONE_TAG}
      dockerfile: ./dockerfile
      json_key:
        from_secret: google_credentials
      build_args_from_env:
        - ACCESS_TOKEN
      build_args:
        - USER=drone.robot
    when:
      event: tag      

  - name: deploy
    image: reg.ffglobaltech.com/drone-helm3
    settings:
      add_repos: "megarich=https://helm.ffglobaltech.com/"
      mode: upgrade
      chart: megarich/official
      release: official
      skip_tls_verify: true
      debug: true
      values_files: "./deployments/helm/official-values.yaml"
    environment:
      wait_for_upgrade: true
      KUBE_API_SERVER:
        from_secret: k8s_server
      KUBE_TOKEN:
        from_secret: k8s_token
      kube_certificate:
        from_secret: k8s_cert
    depends_on:
      - configMap
    when:
      branch: dev


  - name: configMapTag
    image: reg.ffglobaltech.com/drone-plugin-kube:0.2.0
    settings:
      namespace: official-web
      template: ./deployments/helm/cm.yaml
      configmap_file: ./deployments/config/env.json
      ca:
        from_secret: k8s_cert_qa
      server:
        from_secret: k8s_server_qa
      token:
        from_secret: k8s_token_qa
    depends_on:
      - docker_gar
    when:
      event: tag


  - name: deployTag
    image: reg.ffglobaltech.com/drone-helm3
    settings:
      add_repos: "megarich=https://helm.ffglobaltech.com/"
      mode: upgrade
      chart: megarich/official
      release: official
      skip_tls_verify: true
      debug: true
      values_files: "./deployments/helm/official-values.yaml"
      values:
        - image.repository=asia-east1-docker.pkg.dev/megarich/tw/taiwan/official
        - image.tag=${DRONE_TAG}
        - imagePullSecrets[0].name=gar-secret
    environment:
      wait_for_upgrade: true
      KUBE_API_SERVER:
        from_secret: k8s_server_qa
      KUBE_TOKEN:
        from_secret: k8s_token_qa
      kube_certificate:
        from_secret: k8s_cert_qa
    depends_on:
      - configMapTag
    when:
      event: tag
